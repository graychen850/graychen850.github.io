{
  "version": 3,
  "sources": ["../../.pnpm/@swup+head-plugin@2.3.0_swup@4.8.1/node_modules/@swup/head-plugin/src/mergeHeadContents.ts", "../../.pnpm/@swup+head-plugin@2.3.0_swup@4.8.1/node_modules/@swup/head-plugin/src/updateAttributes.ts", "../../.pnpm/@swup+head-plugin@2.3.0_swup@4.8.1/node_modules/@swup/head-plugin/src/waitForAssets.ts", "../../.pnpm/@swup+head-plugin@2.3.0_swup@4.8.1/node_modules/@swup/head-plugin/src/index.ts"],
  "sourcesContent": ["type ElementCollection = { el: Element; index?: number }[];\n\nexport default function mergeHeadContents(\n\tcurrentHead: HTMLHeadElement,\n\tnewHead: HTMLHeadElement,\n\t{ shouldPersist = () => false }: { shouldPersist?: (el: Element) => boolean } = {}\n) {\n\tconst currentTags = Array.from(currentHead.children);\n\tconst newChildren = Array.from(newHead.children);\n\n\tconst addTags = getTagsToAdd(currentTags, newChildren);\n\tconst removeTags = getTagsToRemove(currentTags, newChildren);\n\n\t// Remove tags in reverse to keep indexes, keep persistant elements\n\tremoveTags\n\t\t.reverse()\n\t\t.filter(({ el }) => shouldManageTag(el))\n\t\t.filter(({ el }) => !shouldPersist(el))\n\t\t.forEach(({ el }) => currentHead.removeChild(el));\n\n\t// Insert tag *after* previous version of itself to preserve JS variable scope and CSS cascade\n\taddTags\n\t\t.filter(({ el }) => shouldManageTag(el))\n\t\t.forEach(({ el, index = 0 }) => {\n\t\t\tcurrentHead.insertBefore(el.cloneNode(true), currentHead.children[index + 1] || null);\n\t\t});\n\n\treturn {\n\t\tremoved: removeTags.map(({ el }) => el),\n\t\tadded: addTags.map(({ el }) => el)\n\t};\n}\n\nfunction getTagsToRemove(currentEls: Element[], newEls: Element[]): ElementCollection {\n\treturn currentEls.reduce((tags, el) => {\n\t\tconst isAmongNew = newEls.some((newEl) => compareTags(el, newEl));\n\t\tif (!isAmongNew) {\n\t\t\ttags.push({ el });\n\t\t}\n\t\treturn tags;\n\t}, [] as ElementCollection);\n}\n\nfunction getTagsToAdd(currentEls: Element[], newEls: Element[]): ElementCollection {\n\treturn newEls.reduce((tags, el, index) => {\n\t\tconst isAmongCurrent = currentEls.some((currentEl) => compareTags(el, currentEl));\n\t\tif (!isAmongCurrent) {\n\t\t\ttags.push({ el, index });\n\t\t}\n\t\treturn tags;\n\t}, [] as ElementCollection);\n}\n\nfunction shouldManageTag(el: Element) {\n\t// Let swup manage the title tag\n\tif (el.localName === 'title') {\n\t\treturn false;\n\t}\n\t// Leave swup theme styles untouched\n\tif (el.matches('[data-swup-theme]')) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction compareTags(oldTag: Element, newTag: Element) {\n\treturn oldTag.outerHTML === newTag.outerHTML;\n}\n", "export default function updateAttributes(\n\ttarget: Element,\n\tsource: Element,\n\tfilters: (string | RegExp)[] = []\n): void {\n\tconst keep = new Set<string>();\n\n\tfor (const { name, value } of getAttributes(source, filters)) {\n\t\ttarget.setAttribute(name, value);\n\t\tkeep.add(name);\n\t}\n\n\tfor (const { name } of getAttributes(target, filters)) {\n\t\tif (!keep.has(name)) {\n\t\t\ttarget.removeAttribute(name);\n\t\t}\n\t}\n}\n\nfunction getAttributes(el: Element, filters: (string | RegExp)[] = []): Attr[] {\n\tconst all = Array.from(el.attributes);\n\tif (!filters.length) return all;\n\n\treturn all.filter(({ name }) =>\n\t\tfilters.some((pattern) =>\n\t\t\tpattern instanceof RegExp ? pattern.test(name) : name === pattern\n\t\t)\n\t);\n}\n", "export default function waitForAssets(\n\telements: Element[],\n\ttimeoutMs: number = 0\n): Promise<HTMLLinkElement>[] {\n\treturn elements.filter(isStylesheet).map((el) => waitForStylesheet(el, timeoutMs));\n}\n\nfunction isStylesheet(el: Element): el is HTMLLinkElement {\n\treturn el.matches('link[rel=stylesheet][href]');\n}\n\nexport function waitForStylesheet(\n\telement: HTMLLinkElement,\n\ttimeoutMs: number = 0\n): Promise<HTMLLinkElement> {\n\tconst whenLoaded = (cb: () => void) => {\n\t\tif (element.sheet) {\n\t\t\tcb();\n\t\t} else {\n\t\t\tsetTimeout(() => whenLoaded(cb), 10);\n\t\t}\n\t};\n\n\treturn new Promise((resolve) => {\n\t\twhenLoaded(() => resolve(element));\n\t\tif (timeoutMs > 0) {\n\t\t\tsetTimeout(() => resolve(element), timeoutMs);\n\t\t}\n\t});\n}\n", "import { Handler } from 'swup';\nimport Plugin from '@swup/plugin';\n\nimport mergeHeadContents from './mergeHeadContents.js';\nimport updateAttributes from './updateAttributes.js';\nimport waitForAssets from './waitForAssets.js';\n\ntype Options = {\n\t/** Whether to keep orphaned `link`, `style` and `script` tags from the old page. Default: `false` */\n\tpersistAssets: boolean;\n\t/** Tags that will be persisted when a new page is loaded. Boolean, selector or predicate function. Default: `false` */\n\tpersistTags: boolean | string | ((el: Element) => boolean);\n\t/** Delay the transition to the new page until all newly added assets have finished loading. Default: `false` */\n\tawaitAssets: boolean;\n\t/** Additional attributes of the head element to update. Default: ['lang', 'dir']. */\n\tattributes: (string | RegExp)[];\n\t/** How long to wait for assets before continuing anyway. Only applies if `awaitAssets` is enabled. Default: `3000` */\n\ttimeout: number;\n};\n\nexport default class SwupHeadPlugin extends Plugin {\n\tname = 'SwupHeadPlugin';\n\n\trequires = { swup: '>=4.6' };\n\n\tdefaults: Options = {\n\t\tpersistTags: false,\n\t\tpersistAssets: false,\n\t\tawaitAssets: false,\n\t\tattributes: ['lang', 'dir'],\n\t\ttimeout: 3000\n\t};\n\toptions: Options;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\tsuper();\n\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\t// persistAssets is a shortcut for: persistTags with a default asset selector for scripts & styles\n\t\tif (this.options.persistAssets && !this.options.persistTags) {\n\t\t\tthis.options.persistTags = 'link[rel=stylesheet], script[src], style';\n\t\t}\n\t}\n\n\tmount() {\n\t\tthis.before('content:replace', this.updateHead);\n\t}\n\n\tupdateHead: Handler<'content:replace'> = async (visit, { page: { html } }) => {\n\t\tconst { awaitAssets, attributes, timeout } = this.options;\n\n\t\tconst newDocument = visit.to.document!;\n\n\t\tconst { removed, added } = mergeHeadContents(document.head, newDocument.head, {\n\t\t\tshouldPersist: (el) => this.isPersistentTag(el)\n\t\t});\n\n\t\tthis.swup.log(`Removed ${removed.length} / added ${added.length} tags in head`);\n\n\t\tif (attributes?.length) {\n\t\t\tupdateAttributes(document.documentElement, newDocument.documentElement, attributes);\n\t\t}\n\n\t\tif (awaitAssets) {\n\t\t\tconst assetLoadPromises = waitForAssets(added, timeout);\n\t\t\tif (assetLoadPromises.length) {\n\t\t\t\tthis.swup.log(`Waiting for ${assetLoadPromises.length} assets to load`);\n\t\t\t\tawait Promise.all(assetLoadPromises);\n\t\t\t}\n\t\t}\n\t};\n\n\tisPersistentTag(el: Element) {\n\t\tconst { persistTags } = this.options;\n\t\tif (typeof persistTags === 'function') {\n\t\t\treturn persistTags(el);\n\t\t}\n\t\tif (typeof persistTags === 'string' && persistTags.length > 0) {\n\t\t\treturn el.matches(persistTags);\n\t\t}\n\t\treturn Boolean(persistTags);\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AAqDA,SAASA,EAAgBC,IAAAA;AAExB,SAAqB,YAAjBA,GAAGC,aAAAA,CAIHD,GAAGE,QAAQ,mBAAA;AAIhB;AAEA,SAASC,EAAYC,IAAiBC,IAAAA;AACrC,SAAOD,GAAOE,cAAcD,GAAOC;AACpC;AChDA,SAASC,EAAcP,IAAaQ,KAA+B,CAAA,GAAA;AAClE,QAAMC,KAAMC,MAAMC,KAAKX,GAAGY,UAAAA;AAC1B,SAAKJ,GAAQK,SAENJ,GAAIK,OAAO,CAAA,EAAGC,MAAAA,GAAAA,MACpBP,GAAQQ,KAAMC,CAAAA,OACbA,cAAmBC,SAASD,GAAQE,KAAKJ,EAAAA,IAAQA,OAASE,EAAAA,CAAAA,IAJhCR;AAO7B;ACrBA,SAASW,EAAapB,IAAAA;AACrB,SAAOA,GAAGE,QAAQ,4BAAA;AACnB;ACWqB,IAAAmB,IAAA,cAAuBC,EAAAA;EAc3CC,YAAYC,KAA4B,CAAE,GAAA;AAAA,QAAAC;AACzCC,UAAAA,GAAOD,KAAAE,MAdRZ,KAAAA,OAAO,kBAAgBY,KAEvBC,WAAW,EAAEC,MAAM,QAAA,GAASF,KAE5BG,WAAoB,EACnBC,aAAAA,OACAC,eAAAA,OACAC,aAAAA,OACArB,YAAY,CAAC,QAAQ,KAAA,GACrBsB,SAAS,IAAA,GACTP,KACDH,UAAAA,QAiBAW,KAAAA,aAAyCC,eAAOC,IAAAA,EAASC,MAAAA,CAAAA,EAAAA,GAAAA;AACxD,YAAA,EAAML,aAAEA,IAAWrB,YAAEA,GAAUsB,SAAEA,EAAAA,IAAYT,GAAKD,SAE5Ce,IAAcF,GAAMG,GAAGC,UAAAA,EAEvBC,SAAEA,GAAOC,OAAEA,EAAAA,IAAAA,SHnDlBC,IACAC,IAAAA,EACAC,eAAEA,KAAgBA,MAAAA,MAAM,IAAwD,CAAA,GAAA;AAEhF,cAAMC,KAAcrC,MAAMC,KAAKiC,GAAYI,QAAAA,GACrCC,KAAcvC,MAAMC,KAAKkC,GAAQG,QAAAA,GAEjCE,MAiCeC,KAjCQJ,IAAaE,GAkC5BG,OAAO,CAACC,IAAMrD,IAAIsD,QACRH,GAAWnC,KAAMuC,CAAAA,OAAcpD,EAAYH,IAAIuD,EAAAA,CAAAA,KAErEF,GAAKG,KAAK,EAAExD,IAAAA,IAAIsD,OAAAA,GAAAA,CAAAA,GAEVD,KACL,CAAA,CAAA;AAPJ,YAAsBF;AAhCrB,cAAMM,KAsBP,SAAyBN,IAAuBO,IAAAA;AAC/C,iBAAOP,GAAWC,OAAO,CAACC,IAAMrD,QACZ0D,GAAO1C,KAAM2C,CAAAA,OAAUxD,EAAYH,IAAI2D,EAAAA,CAAAA,KAEzDN,GAAKG,KAAK,EAAExD,IAAAA,GAAAA,CAAAA,GAENqD,KACL,CAAA,CAAA;QACJ,EA9BoCN,IAAaE,EAAAA;AAgBhD,eAbAQ,GACEG,QAAAA,EACA9C,OAAO,CAAA,EAAGd,IAAAA,GAAAA,MAASD,EAAgBC,EAAAA,CAAAA,EACnCc,OAAO,CAAA,EAAGd,IAAAA,GAAAA,MAAAA,CAAU8C,GAAc9C,EAAAA,CAAAA,EAClC6D,QAAQ,CAAA,EAAG7D,IAAAA,GAAAA,MAAS4C,GAAYkB,YAAY9D,EAAAA,CAAAA,GAG9CkD,GACEpC,OAAO,CAAA,EAAGd,IAAAA,GAAAA,MAASD,EAAgBC,EAAAA,CAAAA,EACnC6D,QAAQ,CAAA,EAAG7D,IAAAA,IAAIsD,OAAAA,KAAQ,EAAA,MAAA;AACvBV,UAAAA,GAAYmB,aAAa/D,GAAGgE,UAAAA,IAAU,GAAOpB,GAAYI,SAASM,KAAQ,CAAA,KAAM,IAAA;QAAA,CAAA,GAG3E,EACNZ,SAASe,GAAWQ,IAAI,CAAA,EAAGjE,IAAAA,GAAAA,MAASA,EAAAA,GACpC2C,OAAOO,GAAQe,IAAI,CAAA,EAAGjE,IAAAA,GAAAA,MAASA,EAAAA,EAAAA;MAEjC,EGuB+CyC,SAASyB,MAAM3B,EAAY2B,MAAM,EAC7EpB,eAAgB9C,CAAAA,OAAOyB,GAAK0C,gBAAgBnE,EAAAA,EAAAA,CAAAA;AAS7C,UANAyB,GAAKI,KAAKuC,IAAe,WAAA1B,EAAQ7B,MAAAA,YAAkB8B,EAAM9B,MAAAA,eAAAA,GAAAA,QAErDD,KAAAA,EAAYC,UF5DM,SACvBwD,IACAC,IACA9D,KAA+B,CAAA,GAAA;AAE/B,cAAM+D,KAAO,oBAAIC;AAEjB,mBAAK,EAAMzD,MAAEA,IAAI0D,OAAEA,GAAAA,KAAWlE,EAAc+D,IAAQ9D,EAAAA,EACnD6D,CAAAA,GAAOK,aAAa3D,IAAM0D,EAAAA,GAC1BF,GAAKI,IAAI5D,EAAAA;AAGV,mBAAK,EAAMA,MAAEA,GAAAA,KAAUR,EAAc8D,IAAQ7D,EAAAA,EACvC+D,CAAAA,GAAKK,IAAI7D,EAAAA,KACbsD,GAAOQ,gBAAgB9D,EAAAA;MAG1B,EE4CoB0B,SAASqC,iBAAiBvC,EAAYuC,iBAAiBlE,CAAAA,GAGrEqB,IAAa;AAChB,cAAM8C,KDjEe,SACvBC,IACAC,KAAoB,GAAA;AAEpB,iBAAOD,GAASlE,OAAOM,CAAAA,EAAc6C,IAAKjE,CAAAA,OAAAA,SAQ1CkF,IACAD,KAAoB,GAAA;AAEpB,kBAAME,KAAcC,CAAAA,OAAAA;AACfF,cAAAA,GAAQG,QACXD,GAAAA,IAEAE,WAAW,MAAMH,GAAWC,EAAAA,GAAK,EAAA;YAClC;AAGD,mBAAA,IAAWG,QAASC,CAAAA,OAAAA;AACnBL,cAAAA,GAAW,MAAMK,GAAQN,EAAAA,CAAAA,GACrBD,KAAY,KACfK,WAAW,MAAME,GAAQN,EAAAA,GAAUD,EAAAA;YACpC,CAAA;UAEF,EAzBoEjF,IAAIiF,EAAAA,CAAAA;QACxE,EC4D2CtC,GAAOT,CAAAA;AAC3C6C,QAAAA,GAAkBlE,WACrBY,GAAKI,KAAKuC,IAAmB,eAAAW,GAAkBlE,MAAAA,iBAAAA,GAAAA,MACzC0E,QAAQ9E,IAAIsE,EAAAA;MAEpB;IACD,GAlCCpD,KAAKH,UAAOiE,EAAQ,CAAA,GAAA9D,KAAKG,UAAaN,EAAAA,GAGlCG,KAAKH,QAAQQ,iBAAAA,CAAkBL,KAAKH,QAAQO,gBAC/CJ,KAAKH,QAAQO,cAAc;EAE7B;EAEA2D,QAAAA;AACC/D,SAAKgE,OAAO,mBAAmBhE,KAAKQ,UAAAA;EACrC;EA0BAgC,gBAAgBnE,IAAAA;AACf,UAAA,EAAM+B,aAAEA,GAAAA,IAAgBJ,KAAKH;AAC7B,WAA2B,cAAA,OAAhBO,KACHA,GAAY/B,EAAAA,IAEO,YAAA,OAAhB+B,MAA4BA,GAAYlB,SAAS,IACpDb,GAAGE,QAAQ6B,EAAAA,IAEZ6D,QAAQ7D,EAAAA;EAChB;AAAA;",
  "names": ["shouldManageTag", "el", "localName", "matches", "compareTags", "oldTag", "newTag", "outerHTML", "getAttributes", "filters", "all", "Array", "from", "attributes", "length", "filter", "name", "some", "pattern", "RegExp", "test", "isStylesheet", "SwupHeadPlugin", "Plugin", "constructor", "options", "_this", "super", "this", "requires", "swup", "defaults", "persistTags", "persistAssets", "awaitAssets", "timeout", "updateHead", "async", "visit", "page", "newDocument", "to", "document", "removed", "added", "currentHead", "newHead", "shouldPersist", "currentTags", "children", "newChildren", "addTags", "currentEls", "reduce", "tags", "index", "currentEl", "push", "removeTags", "newEls", "newEl", "reverse", "forEach", "removeChild", "insertBefore", "cloneNode", "map", "head", "isPersistentTag", "log", "target", "source", "keep", "Set", "value", "setAttribute", "add", "has", "removeAttribute", "documentElement", "assetLoadPromises", "elements", "timeoutMs", "element", "whenLoaded", "cb", "sheet", "setTimeout", "Promise", "resolve", "_extends", "mount", "before", "Boolean"]
}
