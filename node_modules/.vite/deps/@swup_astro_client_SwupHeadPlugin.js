import {
  e
} from "./chunk-RU6KZPHD.js";
import "./chunk-EQCVQC35.js";

// node_modules/.pnpm/@swup+head-plugin@2.3.0_swup@4.8.1/node_modules/@swup/head-plugin/dist/index.modern.js
function t() {
  return t = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = arguments[t2];
      for (var n2 in s2) Object.prototype.hasOwnProperty.call(s2, n2) && (e2[n2] = s2[n2]);
    }
    return e2;
  }, t.apply(this, arguments);
}
function s(e2) {
  return "title" !== e2.localName && !e2.matches("[data-swup-theme]");
}
function n(e2, t2) {
  return e2.outerHTML === t2.outerHTML;
}
function r(e2, t2 = []) {
  const s2 = Array.from(e2.attributes);
  return t2.length ? s2.filter(({ name: e3 }) => t2.some((t3) => t3 instanceof RegExp ? t3.test(e3) : e3 === t3)) : s2;
}
function o(e2) {
  return e2.matches("link[rel=stylesheet][href]");
}
var i = class extends e {
  constructor(e2 = {}) {
    var i2;
    super(), i2 = this, this.name = "SwupHeadPlugin", this.requires = { swup: ">=4.6" }, this.defaults = { persistTags: false, persistAssets: false, awaitAssets: false, attributes: ["lang", "dir"], timeout: 3e3 }, this.options = void 0, this.updateHead = async function(e3, { page: {} }) {
      const { awaitAssets: t2, attributes: a, timeout: u } = i2.options, l = e3.to.document, { removed: c, added: d } = function(e4, t3, { shouldPersist: r2 = () => false } = {}) {
        const o2 = Array.from(e4.children), i3 = Array.from(t3.children), a2 = (u2 = o2, i3.reduce((e5, t4, s2) => (u2.some((e6) => n(t4, e6)) || e5.push({ el: t4, index: s2 }), e5), []));
        var u2;
        const l2 = function(e5, t4) {
          return e5.reduce((e6, s2) => (t4.some((e7) => n(s2, e7)) || e6.push({ el: s2 }), e6), []);
        }(o2, i3);
        return l2.reverse().filter(({ el: e5 }) => s(e5)).filter(({ el: e5 }) => !r2(e5)).forEach(({ el: t4 }) => e4.removeChild(t4)), a2.filter(({ el: e5 }) => s(e5)).forEach(({ el: t4, index: s2 = 0 }) => {
          e4.insertBefore(t4.cloneNode(true), e4.children[s2 + 1] || null);
        }), { removed: l2.map(({ el: e5 }) => e5), added: a2.map(({ el: e5 }) => e5) };
      }(document.head, l.head, { shouldPersist: (e4) => i2.isPersistentTag(e4) });
      if (i2.swup.log(`Removed ${c.length} / added ${d.length} tags in head`), null != a && a.length && function(e4, t3, s2 = []) {
        const n2 = /* @__PURE__ */ new Set();
        for (const { name: o2, value: i3 } of r(t3, s2)) e4.setAttribute(o2, i3), n2.add(o2);
        for (const { name: t4 } of r(e4, s2)) n2.has(t4) || e4.removeAttribute(t4);
      }(document.documentElement, l.documentElement, a), t2) {
        const e4 = function(e5, t3 = 0) {
          return e5.filter(o).map((e6) => function(e7, t4 = 0) {
            const s2 = (t5) => {
              e7.sheet ? t5() : setTimeout(() => s2(t5), 10);
            };
            return new Promise((n2) => {
              s2(() => n2(e7)), t4 > 0 && setTimeout(() => n2(e7), t4);
            });
          }(e6, t3));
        }(d, u);
        e4.length && (i2.swup.log(`Waiting for ${e4.length} assets to load`), await Promise.all(e4));
      }
    }, this.options = t({}, this.defaults, e2), this.options.persistAssets && !this.options.persistTags && (this.options.persistTags = "link[rel=stylesheet], script[src], style");
  }
  mount() {
    this.before("content:replace", this.updateHead);
  }
  isPersistentTag(e2) {
    const { persistTags: t2 } = this.options;
    return "function" == typeof t2 ? t2(e2) : "string" == typeof t2 && t2.length > 0 ? e2.matches(t2) : Boolean(t2);
  }
};
export {
  i as default
};
//# sourceMappingURL=@swup_astro_client_SwupHeadPlugin.js.map
